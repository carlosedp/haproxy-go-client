// Code generated by go-swagger; DO NOT EDIT.

// /*
// MIT License
//
// Copyright (c) 2022 Carlos Eduardo de Paula
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
// */
//
//

package stick_table

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSetStickTableEntriesParams creates a new SetStickTableEntriesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSetStickTableEntriesParams() *SetStickTableEntriesParams {
	return &SetStickTableEntriesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSetStickTableEntriesParamsWithTimeout creates a new SetStickTableEntriesParams object
// with the ability to set a timeout on a request.
func NewSetStickTableEntriesParamsWithTimeout(timeout time.Duration) *SetStickTableEntriesParams {
	return &SetStickTableEntriesParams{
		timeout: timeout,
	}
}

// NewSetStickTableEntriesParamsWithContext creates a new SetStickTableEntriesParams object
// with the ability to set a context for a request.
func NewSetStickTableEntriesParamsWithContext(ctx context.Context) *SetStickTableEntriesParams {
	return &SetStickTableEntriesParams{
		Context: ctx,
	}
}

// NewSetStickTableEntriesParamsWithHTTPClient creates a new SetStickTableEntriesParams object
// with the ability to set a custom HTTPClient for a request.
func NewSetStickTableEntriesParamsWithHTTPClient(client *http.Client) *SetStickTableEntriesParams {
	return &SetStickTableEntriesParams{
		HTTPClient: client,
	}
}

/* SetStickTableEntriesParams contains all the parameters to send to the API endpoint
   for the set stick table entries operation.

   Typically these are written to a http.Request.
*/
type SetStickTableEntriesParams struct {

	/* Process.

	   Process number if master-worker mode, if not only first process is returned
	*/
	Process int64

	/* StickTable.

	   Stick table name
	*/
	StickTable string

	/* StickTableEntry.

	   Stick table entry
	*/
	StickTableEntry SetStickTableEntriesBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the set stick table entries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetStickTableEntriesParams) WithDefaults() *SetStickTableEntriesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the set stick table entries params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SetStickTableEntriesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the set stick table entries params
func (o *SetStickTableEntriesParams) WithTimeout(timeout time.Duration) *SetStickTableEntriesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set stick table entries params
func (o *SetStickTableEntriesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set stick table entries params
func (o *SetStickTableEntriesParams) WithContext(ctx context.Context) *SetStickTableEntriesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set stick table entries params
func (o *SetStickTableEntriesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set stick table entries params
func (o *SetStickTableEntriesParams) WithHTTPClient(client *http.Client) *SetStickTableEntriesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set stick table entries params
func (o *SetStickTableEntriesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProcess adds the process to the set stick table entries params
func (o *SetStickTableEntriesParams) WithProcess(process int64) *SetStickTableEntriesParams {
	o.SetProcess(process)
	return o
}

// SetProcess adds the process to the set stick table entries params
func (o *SetStickTableEntriesParams) SetProcess(process int64) {
	o.Process = process
}

// WithStickTable adds the stickTable to the set stick table entries params
func (o *SetStickTableEntriesParams) WithStickTable(stickTable string) *SetStickTableEntriesParams {
	o.SetStickTable(stickTable)
	return o
}

// SetStickTable adds the stickTable to the set stick table entries params
func (o *SetStickTableEntriesParams) SetStickTable(stickTable string) {
	o.StickTable = stickTable
}

// WithStickTableEntry adds the stickTableEntry to the set stick table entries params
func (o *SetStickTableEntriesParams) WithStickTableEntry(stickTableEntry SetStickTableEntriesBody) *SetStickTableEntriesParams {
	o.SetStickTableEntry(stickTableEntry)
	return o
}

// SetStickTableEntry adds the stickTableEntry to the set stick table entries params
func (o *SetStickTableEntriesParams) SetStickTableEntry(stickTableEntry SetStickTableEntriesBody) {
	o.StickTableEntry = stickTableEntry
}

// WriteToRequest writes these params to a swagger request
func (o *SetStickTableEntriesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param process
	qrProcess := o.Process
	qProcess := swag.FormatInt64(qrProcess)
	if qProcess != "" {

		if err := r.SetQueryParam("process", qProcess); err != nil {
			return err
		}
	}

	// query param stick_table
	qrStickTable := o.StickTable
	qStickTable := qrStickTable
	if qStickTable != "" {

		if err := r.SetQueryParam("stick_table", qStickTable); err != nil {
			return err
		}
	}
	if err := r.SetBodyParam(o.StickTableEntry); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
